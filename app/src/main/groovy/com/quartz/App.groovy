/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.quartz

import com.opencsv.CSVWriter
import org.jsoup.Jsoup
import org.jsoup.nodes.Document
import org.jsoup.nodes.Element

class App {
    static void main(String[] args) {
       List<String> urls = new LinkedList<>()

        urls.add("https://go.olx.com.br/grande-goiania-e-anapolis?o=1&q=iphone%2011&sp=2")
        urls.add("https://go.olx.com.br/grande-goiania-e-anapolis?o=2&q=iphone%2011&sp=2")
        urls.add("https://go.olx.com.br/grande-goiania-e-anapolis?o=3&q=iphone%2011&sp=2")

        List<OlxData> olxList = new ArrayList<>()

        for (String url : urls){
             olxList << getData(url)
        }

        olxList = olxList.flatten()

        def priceAvg = getAveragePriceFromList(olxList)

        List<OlxData> filteredData = new ArrayList<>()

        for (OlxData data: olxList){
            if(data.price <= priceAvg){
                filteredData<<data
            }
        }

        generateCsvFile(filteredData)

    }

// Endereço - sc-12rk7z2-2 > sc-12rk7z2-3 > sc-12rk7z2-9 > sc-12rk7z2-12 > sc-12rk7z2-13 > sc-1c3y11-0 > span
// preço - sc-12rk7z2-2 > sc-12rk7z2-3 > sc-12rk7z2-8 > sc-1kn4z61-0 > sc-1kn4z61-1 > span
    static List<OlxData> getData(String url){

        List<OlxData> listOLX = new ArrayList<>()

        Document doc = Jsoup.connect(url).get()

        List<Element> liList = doc.getElementsByClass("sc-1fcmfeb-2")

        for (int i=0; i < 4; i++){

            OlxData data = new OlxData();
            Element li = liList.remove(0)
            if(i==2){
                continue
            }
            Element anchor = li.getElementsByTag("a").first()

            data.announceURL = anchor.attr("href")
            data.title = anchor.attr("title")

            println(data.title)

            Element addressDiv = anchor.getElementsByClass("sc-1c3ysll-0").first()

            Element spanAddress = addressDiv.getElementsByTag("span").first()

            Element priceDiv = anchor.getElementsByClass("sc-1kn4z61-1").first()

            Element spanPrice = priceDiv.getElementsByTag("span").first()

            data.address = spanAddress.text()

            String priceString = spanPrice.text()

            String[] parts = priceString.split(/(R\$\s)/)

            data.price =  Double.parseDouble(parts[1])*1000

            listOLX << data
        }

        return listOLX
    }

    static BigDecimal getAveragePriceFromList(List<OlxData> list){

        BigDecimal average = 0.00

        for (OlxData data: list) {
            average = (average + data.price)/2
        }

        return average

    }

    static void generateCsvFile(List<OlxData> list)throws IOException{

        String[] FILE_HEADER = ["Title","Price","Address","URL"]
        def fileName = 'olxScrapper.csv'

        CSVWriter writer = new CSVWriter(new FileWriter(fileName))

        writer.writeNext(FILE_HEADER)

        for(OlxData data : list){
            String[] dataToWrite = [data.title, "${data.price}", data.address,data.announceURL]
            writer.writeNext(dataToWrite)
        }
        writer.close()



    }
}
